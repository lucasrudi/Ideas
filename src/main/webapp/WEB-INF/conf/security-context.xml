<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:security="http://www.springframework.org/schema/security"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
      http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
   http://www.springframework.org/schema/security 
   http://www.springframework.org/schema/security/spring-security-3.1.xsd
   http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.5.xsd">
	<security:global-method-security secured-annotations="enabled"></security:global-method-security>
	<security:http security="none" pattern="/static/**" />
	<security:http auto-config="true" use-expressions="true" authentication-manager-ref="authenticationManager">
		<security:intercept-url pattern="/j_spring_security_check" access="isAnonymous()" />
		<security:intercept-url pattern="/login/" access="isAnonymous()" />
		<security:intercept-url pattern="/ideas/**" access="hasRole('ROLE_USER')" />
		<security:intercept-url pattern="/**" access="isAnonymous()" />
		<!-- <security:intercept-url pattern="/**" access="hasRole('ROLE_USER')" /> -->
		<security:form-login authentication-details-source-ref="authenticationDetailsSource" />
		<security:logout />
		<security:anonymous />
		<security:session-management >
			<security:concurrency-control max-sessions="1" />
		</security:session-management>
	</security:http>
	
	<bean id="authenticationDetailsSource"
		class="com.rudilucas.ideas.security.IdeasAuthenticationDetailsSource">
		<property name="userService" ref="userService"></property>
	</bean>
	<bean id="autenticationSource" class="com.rudilucas.ideas.security.LdapAuthenticationSource" />

	<bean
		class="org.springframework.security.authentication.encoding.Md5PasswordEncoder"
		id="passwordEncoder" />

	<bean id="userService" class="com.rudilucas.ideas.service.DefaultUserService">
		<property name="userDao" ref="userDao"></property>
	</bean>
	
	<security:authentication-manager id="authenticationManager" >
    	<security:authentication-provider ref="ldapAuthProvider">
		</security:authentication-provider>
	</security:authentication-manager>
	<!-- 
	<security:ldap-server url="${ldap.connection.url}" id="ldapServer"
		manager-dn="${ldap.manager.user}" 
		manager-password="${ldap.manager.pass}" root="DC=ny,DC=rga,DC=com" />
	 -->
	<bean id="contextSource" class="org.springframework.security.ldap.DefaultSpringSecurityContextSource">
    	<constructor-arg value="${ldap.connection.url}" />
    	<property name="userDn" value="${ldap.manager.user}" />
    	<property name="password" value="${ldap.manager.pass}" />
    	<property name="authenticationSource" ref="autenticationSource" />
	</bean>

	<bean id="ldapAuthProvider" class="org.springframework.security.ldap.authentication.LdapAuthenticationProvider">
	    <constructor-arg>
	        <bean class="com.rudilucas.ideas.security.ldap.LdapAuthenticatorImpl">
	            <property name="contextFactory" ref="contextSource" />
	            <property name="principalPrefix" value="${ldap.principal.prefix}" />
	            <property name="user" ref="user"></property>
	        </bean>
	    </constructor-arg>
	    <constructor-arg>
	      <bean class="org.springframework.security.ldap.userdetails.DefaultLdapAuthoritiesPopulator" >
	      	<constructor-arg name="contextSource" ref="contextSource"/>
	      	<constructor-arg name="groupSearchBase" value="${ldap.group.search.base}"/>
            <property name="groupSearchFilter" value="${ldap.group.seach.filter}"></property>
	      </bean>
	    </constructor-arg>
	</bean>
	<!-- DAOs -->
	<bean id="ldapTemplate" class="org.springframework.ldap.core.LdapTemplate">
		<constructor-arg ref="contextSource" />
  	</bean>
  	<bean class="org.springframework.security.web.access.expression.DefaultWebSecurityExpressionHandler" id="expressionHandler"/>

	<bean id="ideasAuthenticationProvider"
		class="com.rudilucas.ideas.security.IdeasAuthenticationProvider" />

	
</beans>
	